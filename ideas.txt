// interfaces
type Partition interface {
	// here
}

// interfaces
type RoundRobinStrategy struct {
}

type MessageWrapper struct {
	id
	paylaod
}

func (m MessageWrapper) Ack() error {
}

type DistributionStrategy interface {
	ChoosePartition(payload byte[]) int64
}

type Topic struct {
	distroStrategy DistributionStrategy
	partitions Partition[]
}

type Node struct {
	master Node
	topics Topic[]
}

func (p Partition) HandleMessage(payload byte[]) {
	// assign an ID

	// create a message wrapper

	// write it disk

	// notify all the clients
}

func (Node n) SendMessage(topic string, payload byte[]) {
	// actually find the right partition || topic
}

func (Node n ) Subscribe(topic string, partition int64, c Client) {
	// pass through to the partition
}

type Client struct {
	node Node
}



